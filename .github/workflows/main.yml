name: Terraform

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: "0001- VM Deployment 01"
    steps:
    # checkout the repo
    - uses: actions/checkout@v2
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: Azure/get-keyvault-secrets@v1
      with: 
        keyvault: "SharedServicesKeyVault"
        secrets: 'TenantID, SubscriptionID, TerraformSpSecret, TerraformSPID'
      id: GetSecretAction

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      using: "composite"
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      using: "composite"
      with:
        ARM_CLIENT_ID: ${{ steps.GetSecretAction.outputs.TerraformSPID }}
        ARM_CLIENT_SECRET: ${{ steps.GetSecretAction.outputs.TerraformSpSecret }}
        ARM_SUBSCRIPTION_ID: ${{ steps.GetSecretAction.outputs.SubscriptionID }}
        ARM_TENANT_ID: ${{ steps.GetSecretAction.outputs.TenantID }}
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      using: "composite"
      with:
        ARM_CLIENT_ID: ${{ steps.GetSecretAction.outputs.TerraformSPID }}
        ARM_CLIENT_SECRET: ${{ steps.GetSecretAction.outputs.TerraformSpSecret }}
        ARM_SUBSCRIPTION_ID: ${{ steps.GetSecretAction.outputs.SubscriptionID }}
        ARM_TENANT_ID: ${{ steps.GetSecretAction.outputs.TenantID }}
      run: terraform plan

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      using: "composite"
      with:
        ARM_CLIENT_ID: ${{ steps.GetSecretAction.outputs.TerraformSPID }}
        ARM_CLIENT_SECRET: ${{ steps.GetSecretAction.outputs.TerraformSpSecret }}
        ARM_SUBSCRIPTION_ID: ${{ steps.GetSecretAction.outputs.SubscriptionID }}
        ARM_TENANT_ID: ${{ steps.GetSecretAction.outputs.TenantID }}
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve




